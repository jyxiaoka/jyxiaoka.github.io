(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{347:function(s,a,e){"use strict";e.r(a);var t=e(0),n=Object(t.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("blockquote",[e("p",[s._v("每种语言都会有它相应的类库依赖管理工具，比如Java的ant、maven、gradle，Node.js的npm等。那么在开发iOS应用时，也会引用到很多第三方的开源类库，这时为了方便管理这些类库，提高我们的开发效率，我们就会使用到iOS的类库依赖管理工具——"),e("code",[s._v("CocoaPods")]),s._v("。\n")])]),s._v(" "),e("h2",{attrs:{id:"cocoapods简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cocoapods简介"}},[s._v("#")]),s._v(" CocoaPods简介")]),s._v(" "),e("p",[s._v("在开发iOS应用时，常常需要用到第三方开源类库，比如AFNetWorking、SDWebImage等，可能这些类库有依赖其他的类库，我们有需要把这些库下载下来再复制到项目中去，而有可能其他的类库又可能依赖其他的类库，这样就会造成无休止的去进行这些工作；另一个情况就是，这些依赖的类库有时候需要更新，那么就需要重新去下载，然后重新加到项目中去，非常繁琐。所以就需要一个工具帮你解决这些问题，这就是"),e("code",[s._v("CocoaPods")]),s._v(",iOS开发中的最常用最出名的类库管理工具。通过CocoaPods，一行命令就可以解决以上的两个问题。")]),s._v(" "),e("h2",{attrs:{id:"cocoapods的安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cocoapods的安装"}},[s._v("#")]),s._v(" CocoaPods的安装")]),s._v(" "),e("p",[s._v("使用ruby来安装CocoaPods，Mac下都自带了ruby，查看是否安装了ruby，使用"),e("code",[s._v("ruby --version")]),s._v(",如果输出了ruby的版本就表示已经安装了ruby。使用ruby的gem命令即可下载安装CocoaPods：")]),s._v(" "),e("div",{staticClass:"language-ruby line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-ruby"}},[e("code",[s._v("$ sudo gem install cocoapods\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("结果，满怀信心期望的我，敲入了这行命令后，一直卡主不动了。原来在我大天朝，官方的ruby源被屏蔽了，也阻挡了cocoapods.org 😅。\n我们可以将官方的ruby源换成国内淘宝的源：")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("$ gem sources --remove https://rubygems.org/\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $ gem sources -a https://ruby.taobao.org/")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# taobao的源已不再维护，更改为：")]),s._v("\n$ gem sources -a https://gems.ruby-china.com/\n//验证ruby源是并且仅是taobao源，输入命令：\n$ gem sources -l\n//在终端输出下面的文字就说明上面的命令执行成功了：\n*** CURRENT SOURCES ***\n\nhttps://ruby.taobao.org\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[s._v("再次输入命令："),e("code",[s._v("sudo gem install cocoapods")]),s._v("后，以为这次应该可以了，但是事与愿违，抛出了一下的错误：")]),s._v(" "),e("blockquote",[e("p",[s._v("ERROR:  While executing gem ... (Gem::DependencyError)\nUnable to resolve dependencies: cocoapods requires cocoapods-core (= 1.1.1), cocoapods-downloader (< 2.0, >= 1.1.2), cocoapods-trunk (< 2.0, >= 1.1.1), xcodeproj (< 2.0, >= 1.3.3)")])]),s._v(" "),e("p",[s._v("原来是因为依赖的环境版本过低需要更新，使用如下命令升级gem:")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("//升级gem\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" gem update --system\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("然后一连串的升级信息之后，提示RubyGems system software updated，gem就升级完毕了。在执行安装cocoapods就可以了。\n且慢，又出现了如下的错误，真是不省事啊。")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("ERROR:  While executing gem "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Errno::EPERM"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    Operation not permitted - /usr/bin/xcodeproj\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("原来是在osx10.11(OSX El Capitan)之后(我的是macOS 10.12了)，系统阻止了写入/usr/bin目录，而CocoaPods默认是安装到这个目录的。所以我们安装到指定的目录去，如安装到/usr/local/bin:")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" gem "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -n /usr/local/bin cocoapods\n$ pod setup\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("这次终于安装成功了。执行pod setup时会输出Setting up CocoaPods master repo会等比较久的时间。这步操作是CocoaPods在将它的信息下载到"),e("code",[s._v("~/.cocoapods")]),s._v("目录下。如果等太久，可以cd到那个目录，然后用"),e("code",[s._v("du -sh *")]),s._v("来查看下载进度。也可以使用CocoaPods的镜像索引来提供下载速度。安装成功后,你会看到:Setup completed。\n下载速度过慢会导致下载失败，提示如下信息：")]),s._v(" "),e("blockquote",[e("p",[s._v("[!] /usr/bin/git clone https://github.com/CocoaPods/Specs.git master\nCloning into 'master'...\nfatal: unable to access 'https://github.com/CocoaPods/Specs.git/': SSLRead() return error -9806")])]),s._v(" "),e("p",[s._v("所以使用国内的服务器gitcafe和oschina等的CocoaPods索引库的镜像，在执行索引更新操作时会快很多。如下，可以将CocoaPods设置成使用gitcafe镜像：")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("pod repo remove master\npod repo "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" master https://gitcafe.com/akuamdev/Specs.git\npod repo update\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("将上述路径替换成https://coding.net/u/CocoaPods/p/Specs/git 即可使用OSChina上的镜像。但是执行supdate时也不能成功，提示如下错误：")]),s._v(" "),e("blockquote",[e("p",[s._v("[!] To setup the master specs repo, please run pod setup.")])]),s._v(" "),e("p",[s._v("所以只能是手动把索引库clone下来，")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://git.coding.net/CocoaPods/Specs.git ~/.cocoapods/repos/master\npod setup //务必在手动下载代码后执行一次,执行后 Setup completed\n//setup失败时提示执行\npod repo update --verbose\n//在执行\npod "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" --verbose --no-repo-update //避免去更新了\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("使用https clone时有可能不成功，建议在coding.net网站上设置ssh key,然后以ssh的方式去下载，这样会比较快，且较容易成功，我就是这样clone成功的。\nsetup成功时提示：")]),s._v(" "),e("blockquote",[e("p",[s._v("CocoaPods 1.2.0.beta.1 is available.\nTo update use: "),e("code",[s._v("sudo gem install cocoapods --pre")]),s._v("\n[!] This is a test version we'd love you to try.\nFor more information, see https://blog.cocoapods.org and the CHANGELOG for this version at https://github.com/CocoaPods/CocoaPods/releases/tag/1.2.0.beta.1\nSetup completed")])]),s._v(" "),e("p",[s._v("有时候我们使用pod setup可能会出现失败，这时可使用下面的方法：")]),s._v(" "),e("blockquote",[e("p",[s._v("1.访问 https://github.com/CocoaPods/Specs，然后将Specs项目fork到自己的github账户上")])]),s._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[s._v("下载GitHub Desktop, 然后clone Specs项目。")]),s._v(" "),e("li",[s._v("将clone的Specs项目的文件夹改名为master，然后拖到/Users/用户名/.cocoapods/repos目录下。")]),s._v(" "),e("li",[s._v("运行pod setup")])]),s._v(" "),e("p",[s._v("解释：pod setup的本质就是将https://github.com/CocoaPods/Specs上 的Specs项目clone到/Users/用户名/.cocoapods/repos目录下。若此目录下已有Specs项目，则会将项目更新到最新的状态。由于Specs很大，容易导致pod setup失败。这时就需要我们手动安装Specs。若直接从github上下载zip文件，由于缺少git文件，会导致cocoa pods不使用。若用git clone，由于文件过大，容易导致失败。但是使用GitHub Desktop软件，则会提高clone的成功率，并且会给出clone的进度。")]),s._v(" "),e("h2",{attrs:{id:"cocapods的使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cocapods的使用"}},[s._v("#")]),s._v(" CocaPods的使用")]),s._v(" "),e("p",[s._v("使用时，需要新建一个名为"),e("code",[s._v("Podfile")]),s._v("(固定名字，无后缀)的文件，也可以进入到项目根目录下，使用"),e("code",[s._v("pod init")]),s._v("命令来生一个Podfile文件,然后编辑文件，使用vim或者其他编辑工具都行，Podfile文件的格式如下所示：")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("platform:ios,"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'9.0'")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#不写9.0，则默认是最新的系统版本")]),s._v("\npod "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'JSONKit'")]),s._v(","),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'~>1.4'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#1.4为版本号，不写默认最新版本")]),s._v("\npod "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Reachability'")]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'~>3.0.0'")]),s._v("\npod "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ASIHTTPRequest'")]),s._v("\npod "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'AFNetworking'")]),s._v(","),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'~>2.5.3'")]),s._v("\npod "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'SDWwebImage'")]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'~>3.7.2'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("格式形如："),e("code",[s._v("pod '第三库名称' '版本号'")]),s._v("，第三类库的名称一定要写正确，不然有可能安装失败。版本号标识的区别如下：")]),s._v(" "),e("blockquote"),s._v(" "),e("p",[s._v("(>=) 1.0 至少版本为1.0\n~> 1.0 兼容1.0版本的最新版\n== 1.0或1.0 都表示指定版本")]),s._v(" "),e("p",[s._v("编辑好需要的类库信息后，将文件放到项目的根目录，然后cd进到工程根目录，执行如下命令：")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"你的工程根目录"')]),s._v("\npod "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("之后出现"),e("code",[s._v("pods installed")]),s._v("的提示就表示所有第三方库都已经下载完并设置好了编译参数和依赖。\n以前我们的工程不是CocoaPods工程时，是通过"),e("code",[s._v("*xcodeproj")]),s._v("文件来打开工程的，但使用CocoaPods后会生成一个名为"),e("code",[s._v("*xcworkspace")]),s._v("文件，我们需要使用这个文件来打开工程了。\n当以后我们每次更新了Podfile文件后，都需要重新执行一次"),e("code",[s._v("pod update")]),s._v("命令。")]),s._v(" "),e("h3",{attrs:{id:"查找第三方库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查找第三方库"}},[s._v("#")]),s._v(" 查找第三方库")]),s._v(" "),e("p",[s._v("可以通过命令"),e("code",[s._v("pod search")]),s._v("来在CocoaPods管理的库中查找有没有自己想要的库：")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("//如 查找json相关的可用的库\n$ pod search json\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("会显示出相关可用的库：")]),s._v(" "),e("blockquote",[e("p",[s._v("-> JSON (5.0.0)\nJSON made so simple, it hurts\npod 'JSON', '~> 5.0.0'")])]),s._v(" "),e("ul",[e("li",[s._v("Homepage: https://github.com/3lvis/JSON")]),s._v(" "),e("li",[s._v("Source:   https://github.com/3lvis/JSON.git")]),s._v(" "),e("li",[s._v("Versions: 5.0.0, 5.0.0-beta1, 4.0.2, 4.0.1, 4.0.0, 3.1.0, 3.0.0, 2.1.1,\n2.1.0, 2.0.0 [master repo]\n-> json-parser-swift (0.2.0)\nJSON parser & tokenizer in pure Swift\npod 'json-parser-swift', '~> 0.2.0'")]),s._v(" "),e("li",[s._v("Homepage: https://github.com/webconnex/json-parser-swift")]),s._v(" "),e("li",[s._v("Source:   https://github.com/webconnex/json-parser-swift.git")]),s._v(" "),e("li",[s._v("Versions: 0.2.0, 0.1.1, 0.1.0, 0.0.2, 0.0.1 [master repo]")])]),s._v(" "),e("h3",{attrs:{id:"gitignore的使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gitignore的使用"}},[s._v("#")]),s._v(" .gitignore的使用")]),s._v(" "),e("p",[s._v("我们都知道，每个git项目都会有个"),e("code",[s._v(".gitignore")]),s._v("文件，它的作用是告诉Git哪些文件是不需要添加到版本管理中的，也就是在本地库中有，但是push时不会上传到github库中。使用规则如下所示：")]),s._v(" "),e("ol",[e("li",[s._v("/testDir/  过滤掉整个文件夹")]),s._v(" "),e("li",[s._v("*.zip  过滤掉所有的.zip文件")]),s._v(" "),e("li",[s._v("/testDir/test.c   过滤掉某个具体的文件")])]),s._v(" "),e("p",[s._v("能过滤掉某些文件，也可以指定某些文件添加到版本管理中，如：")]),s._v(" "),e("ol",[e("li",[s._v("！/testDir/test.txt")]),s._v(" "),e("li",[s._v("!*.zip")])]),s._v(" "),e("p",[s._v("就是开头多了一个感叹号，Git会将满足这类规则的文件添加到版本管理中。需要注意的是，要在项目开始时就创建.gitignore文件，否则如果在创建.gitignore之前就push了项目，那么在.gitignore中过滤规则将不会起作用，Git让然会对所有类型的文件进行版本管理。\n言归正传，在执行了命令pod install后，会生成"),e("code",[s._v("Podfile")]),s._v("文件，同时CocoaPods还会生成一个名为"),e("code",[s._v("Podfile.lock")]),s._v("的文件，不要把这个文件加入到.gitignore中，因为Podfile.lock会锁定当前各依赖库的版本，之后执行多次都不会更改版本，只有执行pod update才会改变Podfile.lock。这样可以防止在第三方库升级时造成团队成员各自的第三方库版本不一致。所以需要总是把Podfile.lock加入版本管理中。")]),s._v(" "),e("h3",{attrs:{id:"为自己的项目创建podspec文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为自己的项目创建podspec文件"}},[s._v("#")]),s._v(" 为自己的项目创建podspec文件")]),s._v(" "),e("p",[s._v("我们可以为自己编写的开源项目创建podspec文件，使用一下命令来初始化一个podspec文件：")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("$ pod spec create my_podspec_name\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("执行改命令后，CocoaPods将会在本目录生成一个名为my_podspec_name.podspec文件。可以使用编辑器打开该文件，可以看到里面已经有很详细的说明文档。")]),s._v(" "),e("h3",{attrs:{id:"不更新podspec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#不更新podspec"}},[s._v("#")]),s._v(" 不更新podspec")]),s._v(" "),e("p",[s._v("CocoaPods执行pod install和pod update会默认先更新一次podspec索引。可以使用一下参数来禁止索引更新操作：")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("pod "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" --no-repo-update\npod update --no-repo-update\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("更新：\n后来使用pod repo update 或 pod repo update --verbose更新时，速度很慢，等了很久后会出现错误。")]),s._v(" "),e("h3",{attrs:{id:"生成第三方库的帮助文档"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生成第三方库的帮助文档"}},[s._v("#")]),s._v(" 生成第三方库的帮助文档")]),s._v(" "),e("p",[s._v("可以借助"),e("code",[s._v("appledoc")]),s._v("来生成第三方库的帮助文档，并集成到Xcode中。类似Java的javadoc,可以为我们生成OC代码注释，并且风格和苹果类库的api文档保存一致。\n首先如果没有安装appledoc，使用brew可以安装，执行下面的命令即可：")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("$ brew "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" appledoc\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("执行以上命令时会遇到问题：")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v(" /usr/local is not writable. You should change the\nownership and permissions of /usr/local back to your\nuser account:\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("chown")]),s._v(" -R "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("whoami")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" /usr/local\nfatal: could not create leading directories of "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/usr/local/Library/Taps/homebrew/homebrew-core'")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" Permission denied\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("使用一下命令")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("chown")]),s._v(" -R "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("whoami")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" /usr/local\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("然后再执行安装命令。但执行再执行brew install appledoc就可以了。如果需要update homebrew就执行命令"),e("code",[s._v("brew update")]),s._v("，最后提示Already up-to-date.就更新成功了。\n也可以从github上下载安装：")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone git@github.com:tomaz/appledoc.git\n$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" ./appledoc\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" install-apple.sh\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("使用命令"),e("code",[s._v("appledoc --version")]),s._v("来验证是否已经成功安装了appledoc。\n使用时切换目录到iOS工程目录下，然后使用一下操作：")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("appledoc -o "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("output-path"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" --project-name "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("paoject-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" --project-company "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("project-company"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n//输出的目录、项目名称、公司名称。\n可以使用 appledoc --help来查看更多使用参数。\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h2",{attrs:{id:"cocoapods的原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cocoapods的原理"}},[s._v("#")]),s._v(" CocoaPods的原理")]),s._v(" "),e("p",[s._v("CocoaPods的原理是将所有的第三方依赖库都已target的方式放到一个名为Pods的项目中去，让我们的工程以阿里这个Pods项目，这样，主项目就不需要一个个去管理这些依赖库了，都交由CocoaPods去管理。Pods项目最后会编译生成一个"),e("code",[s._v("libPods.a")]),s._v("的静态库文件，提供给我们的主项目使用，主项目只需依赖这个.a文件即可。\n对于资源文件，CocoaPods提供一个名为"),e("code",[s._v("Pods-resources.sh")]),s._v("的bash脚本，该脚本项目编译的时候都会执行，将第三方库的各种资源文件复制到目标目录中。\nCocoaPods通过一个名为"),e("code",[s._v("Pods.xcconfig")]),s._v("文件来在编译时设置所有的依赖和参数。\n原来的工程设置已经被更改，这是我们不能通过直接打开原本的工程文件去编译，只能通过新生成的xcworkspace来进行项目的管理。")])])}),[],!1,null,null,null);a.default=n.exports}}]);